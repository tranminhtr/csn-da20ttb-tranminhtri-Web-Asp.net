@page
@model Web.Pages.HanBaoDuongXeModel

<h5>Quản lý hạn bảo dưỡng</h5>
@(
Html.DevExtreme().DataGrid<Web.Models.Baoduongxe>()
.ID("gridContainer")
 .ColumnHidingEnabled(true)
.ShowBorders(true)
.Scrolling(scrolling => scrolling.RowRenderingMode(GridRowRenderingMode.Virtual))
.Selection(s => s.Mode(SelectionMode.Multiple))
.ShowColumnLines(true)
.ShowRowLines(true)
.RowAlternationEnabled(true)
.ShowBorders(true)
.OnExporting("exporting")
.Paging(paging => paging.PageSize(10))
.Pager(pager =>
{
    pager.Visible(true);
    pager.DisplayMode(GridPagerDisplayMode.Full);
    pager.ShowPageSizeSelector(true);
    pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
    pager.ShowInfo(true);
    pager.ShowNavigationButtons(true);
})
.Editing(e => e.Mode(GridEditMode.Popup)
.AllowUpdating(true)
.AllowAdding(true)
.AllowDeleting(true)
.Popup(p => p
.Title("Thêm/Sửa hạn bảo dưỡng  ")
.ShowTitle(true)

)
.Form(f => f.Items(items =>
{
    items.AddGroup()
    .ColCount(2)
    .ColSpan(2)
    .Items(groupItems =>
    {
        @*groupItems.AddSimpleFor(m => m.Id);*@
        groupItems.AddSimpleFor(m => m.BienSxId);
        groupItems.AddSimpleFor(m => m.MaCtybdId);
        groupItems.AddSimpleFor(m => m.NgayBd);
        groupItems.AddSimpleFor(m => m.NgayKt);
        groupItems.AddSimpleFor(m => m.MaGoiBdId);
        groupItems.AddSimpleFor(m => m.DemNgay);
        groupItems.AddSimpleFor(m => m.TrangThaiId);
    });
}))
)
.Columns(columns =>
{
@*    columns.AddFor(m => m.Id).Caption("Id");*@

    columns.AddFor(m => m.BienSxId).Caption("Biển số xe")
    .Lookup(lookup => lookup
    .DataSource(d => d.Mvc().Controller("Xes").LoadAction("Get").Key("BienSo"))
    .DisplayExpr("BienSo")
    .ValueExpr("BienSo"));

    columns.AddFor(m => m.MaCtybdId).Caption("Công ty bảo dưỡng")
    .Lookup(lookup => lookup
    .DataSource(d => d.Mvc().Controller("Ctybaoduongs").LoadAction("Get").Key("MaCtybd"))
    .DisplayExpr("TenCtybd")
    .ValueExpr("MaCtybd"));

    columns.AddFor(m => m.NgayBd).Caption("Ngày bắt đầu");

    columns.AddFor(m => m.NgayKt).Caption("Ngày kết thúc");

    columns.AddFor(m => m.MaGoiBdId).Caption("Mã gói bảo dưỡng")
    .Lookup(lookup => lookup
    .DataSource(d => d.Mvc().Controller("Goibaoduongs").LoadAction("Get").Key("MaGoiBd"))
    .DisplayExpr("TenGoi")
    .ValueExpr("MaGoiBd"));

    columns.AddFor(m => m.DemNgay).Caption("Đếm ngày");

    columns.AddFor(m => m.TrangThaiId).Caption("Trạng thái")
    .Lookup(lookup => lookup
    .DataSource(d => d.Mvc().Controller("Danhmucs").LoadAction("Get").Key("Id"))
    .DataSourceOptions(d => d.Filter("[ ['MaLoai','=', 5] ]"))
    .DisplayExpr("TenDm")
    .ValueExpr("Id"));
})
.OnExporting("exporting")
    .Export(e => e.Enabled(true).AllowExportSelectedData(true))
    .DataSource(ds => ds.Mvc()
        .Controller("Baoduongxes")
        .LoadAction("Get")
        .InsertAction("Post")
        .UpdateAction("Put")
        .DeleteAction("Delete")
        .Key("Id")
    )
.SearchPanel(searchPanel => searchPanel
    .Visible(true)
    .Width(240)
    .Placeholder("Tìm kiếm...")
                           )
    .HeaderFilter(hf => hf.Visible(true))
    .Grouping(grouping => grouping.AutoExpandAll(true))
                            .GroupPanel(groupPanel => groupPanel.Visible(true))
.Pager(pager =>
{
    pager.Visible(true);
    pager.DisplayMode(GridPagerDisplayMode.Full);
    pager.ShowPageSizeSelector(true);
    pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
    pager.ShowInfo(true);
    pager.ShowNavigationButtons(true);
})


.FilterRow(filterRow => filterRow
.Visible(true)
.ApplyFilter(GridApplyFilterMode.Auto)
)


.ColumnChooser(c => c.Enabled(true))


.ColumnFixing(c => c.Enabled(true))


.AllowColumnResizing(true)
.ColumnMinWidth(50)
.ColumnAutoWidth(true)

)
@*Xuất excel*@
<script>
    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('HanBaoDuong');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'HanBaoDuong.xlsx');
            });
        });
    }
</script>